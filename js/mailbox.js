// JavaScript cho h·ªôp th∆∞ c·ªßa em
let mailboxData = [];

// Kh·ªüi t·∫°o h·ªôp th∆∞
async function initializeMailbox() {
    // console.log('üì® Kh·ªüi t·∫°o h·ªôp th∆∞...');
    
    try {
        // Load d·ªØ li·ªáu ban ƒë·∫ßu
        const hisDataRef = db.collection('userInfo').doc('hisData');
        const hisDoc = await hisDataRef.get();
        
        if (hisDoc.exists && hisDoc.data().notesForHer) {
            mailboxData = hisDoc.data().notesForHer;
            updateMailbox(mailboxData);
        } else {
            showEmptyMailbox();
        }
        
        // console.log('‚úÖ H·ªôp th∆∞ ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o');
    } catch (error) {
        console.error('‚ùå L·ªói khi kh·ªüi t·∫°o h·ªôp th∆∞:', error);
        showError('C√≥ l·ªói x·∫£y ra khi t·∫£i h·ªôp th∆∞');
    }
}

// C·∫≠p nh·∫≠t hi·ªÉn th·ªã h·ªôp th∆∞
function updateMailbox(notes) {
    // console.log('üì¨ C·∫≠p nh·∫≠t h·ªôp th∆∞ v·ªõi', notes.length, 'th∆∞');
    
    mailboxData = notes || [];
    const mailboxContent = document.getElementById('mailbox-content');
    
    if (!mailboxContent) return;
    
    if (mailboxData.length === 0) {
        showEmptyMailbox();
        return;
    }
    
    // S·∫Øp x·∫øp th∆∞ theo th·ªùi gian (m·ªõi nh·∫•t tr∆∞·ªõc)
    const sortedNotes = [...mailboxData].sort((a, b) => {
        return new Date(b.timestamp) - new Date(a.timestamp);
    });
    
    mailboxContent.innerHTML = '';
    
    sortedNotes.forEach((note, index) => {
        const mailItem = createMailItem(note, index);
        mailboxContent.appendChild(mailItem);
    });
}

// T·∫°o m·ªôt item th∆∞
function createMailItem(note, index) {
    const mailItem = document.createElement('div');
    mailItem.className = 'mail-item';
    
    // Format th·ªùi gian
    const date = new Date(note.timestamp);
    const timeString = date.toLocaleString('vi-VN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
    });
    
    mailItem.innerHTML = `
        <div class="mail-header">
            <div class="mail-sender">
                <div class="sender-icon"> üíå</div>
                <span>T·ª´: Anh</span>
            </div>
            <div class="mail-time">${timeString}</div>
        </div>
        <div class="mail-content">
            ${note.message}
        </div>
    `;
    
    // Th√™m hi·ªáu ·ª©ng xu·∫•t hi·ªán
    mailItem.style.animationDelay = `${index * 0.1}s`;
    
    return mailItem;
}

// Hi·ªÉn th·ªã h·ªôp th∆∞ tr·ªëng
function showEmptyMailbox() {
    const mailboxContent = document.getElementById('mailbox-content');
    if (!mailboxContent) return;
    
    mailboxContent.innerHTML = `
        <div class="empty-mailbox">
            <div class="empty-icon">üì≠</div>
            <h3>H·ªôp th∆∞ tr·ªëng</h3>
            <p>Ch∆∞a c√≥ th∆∞ n√†o t·ª´ anh...<br>
            Anh s·∫Ω g·ª≠i th∆∞ cho em s·ªõm th√¥i! üíï</p>
        </div>
    `;
}

// Hi·ªÉn th·ªã th√¥ng b√°o l·ªói
function showErrorMessage(message) {
    const mailboxContent = document.getElementById('mailbox-content');
    if (!mailboxContent) return;
    
    mailboxContent.innerHTML = `
        <div class="empty-mailbox">
            <div class="empty-icon">‚ùå</div>
            <h3>C√≥ l·ªói x·∫£y ra</h3>
            <p>${message}</p>
        </div>
    `;
}

// L√†m m·ªõi h·ªôp th∆∞
async function refreshMailbox() {
    // console.log('üîÑ L√†m m·ªõi h·ªôp th∆∞...');
    
    const refreshBtn = document.getElementById('refresh-mailbox-btn');
    if (refreshBtn) {
        refreshBtn.innerHTML = 'üîÑ ƒêang t·∫£i...';
        refreshBtn.disabled = true;
    }
    
    try {
        const hisDataRef = db.collection('userInfo').doc('hisData');
        const hisDoc = await hisDataRef.get();
        
        if (hisDoc.exists && hisDoc.data().notesForHer) {
            mailboxData = hisDoc.data().notesForHer;
            updateMailbox(mailboxData);
            // console.log('‚úÖ ƒê√£ l√†m m·ªõi h·ªôp th∆∞');
        } else {
            showEmptyMailbox();
        }
    } catch (error) {
        console.error('‚ùå L·ªói khi l√†m m·ªõi h·ªôp th∆∞:', error);
        showError('Kh√¥ng th·ªÉ l√†m m·ªõi h·ªôp th∆∞');
    } finally {
        if (refreshBtn) {
            refreshBtn.innerHTML = 'üîÑ L√†m m·ªõi h·ªôp th∆∞';
            refreshBtn.disabled = false;
        }
    }
}

// G·∫Øn event listeners
document.addEventListener('DOMContentLoaded', () => {
    // N√∫t l√†m m·ªõi h·ªôp th∆∞
    const refreshBtn = document.getElementById('refresh-mailbox-btn');
    if (refreshBtn) {
        refreshBtn.addEventListener('click', refreshMailbox);
    }
    
    // console.log('üì® Mailbox event listeners ƒë√£ ƒë∆∞·ª£c g·∫Øn');
});
